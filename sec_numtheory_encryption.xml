<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="section-numtheory-encryption">
  <title>Application: Encryption</title>

  <subsection xml:id="subsection-numtheory-ciphers">
    <title>
      Basic Cipher Examples
    </title>

    <p>
      Our convention will be to use only capital English letters, A to Z. We will identify each letter with the remainders modulo 26:
      <table>
        <caption>List of Alphabet Encoding</caption>
        <tabular>
          <col right="minor"/>
          <col left="minor"/>
          <col />
          <col right="minor"/>
          <col left="minor"/>
          <col />
          <col right="minor"/>
          <col left="minor"/>
          <col />
          <col right="minor"/>
          <col left="minor"/>
          <col />
          <col right="minor"/>
          <col left="minor"/>
          <row bottom="minor">
            <cell>
              A
            </cell>
            <cell>
              0
            </cell>
            <cell>
            </cell>
            <cell>
              G
            </cell>
            <cell>
              6
            </cell>
            <cell>
            </cell>
            <cell>
              M
            </cell>
            <cell>
              12
            </cell>
            <cell>
            </cell>
            <cell>
              S
            </cell>
            <cell>
              18
            </cell>
            <cell>
            </cell>
            <cell>
              Y
            </cell>
            <cell>
              24
            </cell>
          </row>
          <row bottom="minor">
            <cell>
              B
            </cell>
            <cell>
              1
            </cell>
            <cell>
            </cell>
            <cell>
              H
            </cell>
            <cell>
              7
            </cell>
            <cell>
            </cell>
            <cell>
              N
            </cell>
            <cell>
              13
            </cell>
            <cell>
            </cell>
            <cell>
              T
            </cell>
            <cell>
              19
            </cell>
            <cell>
            </cell>
            <cell>
              Z
            </cell>
            <cell>
              25
            </cell>
          </row>
          <row bottom="minor">
            <cell>
              C
            </cell>
            <cell>
              2
            </cell>
            <cell>
            </cell>
            <cell>
              I
            </cell>
            <cell>
              8
            </cell>
            <cell>
            </cell>
            <cell>
              O
            </cell>
            <cell>
              14
            </cell>
            <cell>
            </cell>
            <cell>
              U
            </cell>
            <cell>
              20
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
          </row>
          <row bottom="minor">
            <cell>
              D
            </cell>
            <cell>
              3
            </cell>
            <cell>
            </cell>
            <cell>
              J
            </cell>
            <cell>
              9
            </cell>
            <cell>
            </cell>
            <cell>
              P
            </cell>
            <cell>
              15
            </cell>
            <cell>
            </cell>
            <cell>
              V
            </cell>
            <cell>
              21
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
          </row>
          <row bottom="minor">
            <cell>
              E
            </cell>
            <cell>
              4
            </cell>
            <cell>
            </cell>
            <cell>
              K
            </cell>
            <cell>
              10
            </cell>
            <cell>
            </cell>
            <cell>
              Q
            </cell>
            <cell>
              16
            </cell>
            <cell>
            </cell>
            <cell>
              W
            </cell>
            <cell>
              22
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
          </row>
          <row bottom="minor">
            <cell>
              F
            </cell>
            <cell>
              5
            </cell>
            <cell>
            </cell>
            <cell>
              L
            </cell>
            <cell>
              11
            </cell>
            <cell>
            </cell>
            <cell>
              R
            </cell>
            <cell>
              17
            </cell>
            <cell>
            </cell>
            <cell>
              X
            </cell>
            <cell>
              23
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
            <cell>
            </cell>
          </row>
        </tabular>
      </table>
    </p>

    <definition>
      <statement>
        <p>
          A <term>shift cipher</term> is one in which the letters of the alphabet have been shifted by some fixed amount.
        </p>
      </statement>
    </definition>
    <example>
      <statement>
        <p>
          The classic example is the so-called <term>Caesar Cipher</term> which shifts the alphabet to the right three letters. A becomes D, B becomes E, etc.
        </p>
        <p>
          We encrypt letter-by-letter via the function <m>e(x) = x + 3 \pmod{26}</m> and decrypt via <m>d(x) = x-3 \pmod{26}</m>. 
        </p>

        <p>
          Decrypt the following message: L FDQ DOZDBV WUXVM BRX, EUXWXV.
        </p>
      </statement>
    </example>


    <definition>
      <statement>
        <p>
          An <term>affine cipher</term> is one in which letters are transformed via a linear function, <m>e(x) = ax+b \pmod{n} </m> where <m>a, b\in \Z</m> and <m>n\in \Z^+</m>. If <m>a =0</m>, this is a shift cipher.
        </p>
      </statement>
    </definition>

    <note>
      <p>
        To be able to decrypt an affine function, we need <m>\gcd(a,n)=1</m> in order that <m>a</m> is an invertible element. We can find the inverse via the <xref ref="extended-euclidean-algorithm">Extended Euclidean Algorithm</xref>. Recall, the inverse of an invertible element is its <xref ref="def-bezout-coefficient">Bezout coefficient</xref>.
      </p>
    </note>

    <example>
      <statement>
        <p>
          The function <m>f(x) = 5x + 14 \pmod{26} </m> is an example of an affine cipher function.
          <ol>
            <li>
              <p>
                Encipher the following letters:
                <ol>
                  <li>A</li>
                  <li>M</li>
                </ol>
              </p>
            </li>
            <li>
              <p>
                Given that <m>a^{-1}=-5\equiv 21\pmod{26}</m>, find the inverse of <m>f(x)=5x+14\pmod{26}</m>. Please ensure your coefficients are reduced modulo <m>26</m>.
              </p>
            </li>
            <li>
              Verify your inverse by confirming it deciphers the letters above.
            </li>
          </ol>
        </p>
      </statement>
    </example>

  </subsection>

  <subsection xml:id="subsection-numtheory-sage">
    <title>
      Number Theory Using Sage
    </title>

    <p>
      Sage has a convenient way of determining if a number is prime by asking if the number is in a set primes: 
      <sage>
        <input>
          37 in Primes()
        </input>
        <output>
          True
        </output>
      </sage>
      Try testing any number in the cell above.
    </p>

    <p>
      If you want to just want to get a prime number of some particular size (as we want with our <xref ref="rsa-activity">RSA activity</xref>), we ask sage for the <code>next_prime</code>:
      <sage>
        <input>
          next_prime(123456)
        </input>
        <output>
          123457
        </output>
      </sage>
    </p>

    <p>
      The following Sage code allows us to find the GCD and Bezout coefficients via the <code>xgcd</code> command:
      <sage>
        <input>
          # Change a and b to be any positive integers, then press Evaluate
          a=2345
          b = 234
          l = a.xgcd(b)
          pretty_print(str(l[0]) + "=" + str(a) + "*(" + str(l[1]) + ") + " + str(b) + "*(" + str(l[2]) + ")")
        </input>
        <output>
          1=2345*(47) + 234*(-471)
        </output>
      </sage>
      The <code>xgcd</code> command returns a list of the form <code>(gcd, first Bezout coefficient, second Bezout coefficient)</code>, and the code above pretty-prints this in a readable format.
    </p>

    <p>
      In order to do modular exponentiation, we use the <code>powermod</code> function. For example, to compute <m>2019^{2019} \pmod{1000}</m>:
      <sage>
        <input>
          2019.powermod(2019,1000)
        </input>
        <output>
          979
        </output>
      </sage>
    </p>

  </subsection>


  <subsection xml:id="rsa-activity">
    <title>
      The RSA Activity
    </title>

  </subsection>

</section>
